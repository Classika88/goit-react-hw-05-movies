{"version":3,"file":"static/js/21.9c98f764.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","pages/MovieDetails.jsx","services/MoviesApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBack = styled(NavLink)`\n  display: block;\n  width: 100px;\n  border: 1px solid #aaa5a5;\n  font-size: 16px;\n  text-align: center;\n  padding: 10px 0;\n  margin-top: 50px;\n  margin-bottom: 20px;\n  &:hover,\n  &:focus {\n    background-color: #292424;\n    color: #fff;\n  }\n`;\n\nexport const DetailsBox = styled.div`\n  display: flex;\n  margin-bottom: 50px;\n  & > img {\n    display: block;\n    margin-right: 50px;\n  }\n`;\n\nexport const DetailsTitle = styled.h2`\n  margin-top: 0;\n  font-size: 48px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\n\nexport const DetailsText = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const InfoLink = styled(ButtonBack)`\n  display: inline-block;\n  width: 80px;\n  border: 1px solid #aaa5a5;\n  font-size: 16px;\n  text-align: center;\n  padding: 10px 0;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-right: 30px;\n  &:hover,\n  &:focus {\n    background-color: #292424;\n    color: #fff;\n  }\n`;\n","import { DetailsBox, DetailsText, DetailsTitle } from './MovieDetails.styled';\n\nexport const Details = ({ movieDetails }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieDetails;\n  return (\n    <>\n      <DetailsBox>\n        <img src={poster_path} alt={original_title} />\n        <div>\n          <DetailsTitle>\n            {original_title}({release_date})\n          </DetailsTitle>\n          <DetailsText>User score: {vote_average}</DetailsText>\n          <DetailsText>Overview</DetailsText>\n          <p>{overview}</p>\n          <DetailsText>Genres</DetailsText>\n          <p>{genres}</p>\n        </div>\n      </DetailsBox>\n    </>\n  );\n};","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getFilmsById } from 'services/MoviesApi';\nimport { Details } from 'components/MovieDetails/MovieDetails';\nimport {\n  ButtonBack,\n  DetailsTitle,\n  InfoLink,\n} from 'components/MovieDetails/MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [error, setError] = useState('');\n\n  const backLink = location.state?.from;\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovieById = async movieId => {\n      try {\n        setLoading(true);\n        const movieDetails = await getFilmsById(movieId);\n\n        setMovieDetails(movieDetails);\n        setError('');\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {movieDetails && !loading && !error && (\n        <div>\n          <ButtonBack to={backLink}>Go back</ButtonBack>\n          <Details movieDetails={movieDetails} />\n          <div>\n            <DetailsTitle>Additional information</DetailsTitle>\n\n            <InfoLink to=\"cast\" state={{ from: backLink }}>\n              Cast\n            </InfoLink>\n            <InfoLink to=\"reviews\" state={{ from: backLink }}>\n              Reviews\n            </InfoLink>\n\n            <Outlet />\n          </div>\n        </div>\n      )}\n      {loading && !error && <Loader />}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '63801254b5c460a3de0676d2e1a253d2';\n\nexport const getPopularFilms = async () => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n};\n\nexport const getSearchFilms = async query => {\n  const params = {\n    query,\n    api_key: API_KEY,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n};\n\nexport const getFilmsById = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n  return {\n    poster_path: getPoster(poster_path),\n    original_title,\n    release_date: release_date.slice(0, 4),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n};\n\nexport const getActorsById = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${id}/credits`, { params });\n  const credits = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profile_path: getPoster(profile_path),\n  }));\n  return credits;\n};\n\nexport const getReviewsById = async id => {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  const { data } = await axios.get(`/movie/${id}/reviews`, { params });\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n};\n\nconst getPoster = url => 'https://image.tmdb.org/t/p/w500' + url;\n"],"names":["ButtonBack","styled","NavLink","DetailsBox","DetailsTitle","DetailsText","InfoLink","Details","movieDetails","poster_path","original_title","release_date","vote_average","overview","genres","src","alt","useState","setMovieDetails","loading","setLoading","movieId","useParams","location","useLocation","error","setError","backLink","state","from","useEffect","getMovieById","getFilmsById","message","to","Loader","axios","API_KEY","getPopularFilms","params","api_key","language","data","movies","results","map","id","getSearchFilms","query","getPoster","slice","toFixed","name","join","getActorsById","credits","cast","profile_path","getReviewsById","reviews","author","content","url"],"sourceRoot":""}